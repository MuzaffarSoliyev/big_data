[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 13-ea)
[debug]       Load.loadUnit: plugins took 153.167599ms
[debug]       Load.loadUnit: defsScala took 0.5995ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.1137 ms
[debug]           Load.resolveProject(global-plugins) took 84.7613ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 159.521699ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 195.471701ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.347601ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 368.6714ms
[debug]   Load.apply: load took 606.5603ms
[debug]   Load.apply: resolveProjects took 8.069ms
[debug]   Load.apply: finalTransforms took 121.815701ms
[debug]   Load.apply: config.delegates took 15.5612ms
[debug]   Load.apply: Def.make(settings)... took 937.276901ms
[debug]   Load.apply: structureIndex took 284.731601ms
[debug]   Load.apply: mkStreams took 18.9869ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4732.9857ms
[debug]           Load.loadUnit: plugins took 46.081299ms
[debug]           Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\user\IdeaProjects\MADE_HW_4\project
[debug]             Load.loadUnit: mkEval took 8.993299ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\IdeaProjects\MADE_HW_4\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.609201 ms
[info] loading settings for project made_hw_4-build from idea.sbt ...
[debug]               Load.resolveProject(made_hw_4-build) took 5.0568ms
[debug]             Load.loadTransitive: finalizeProject(Project(id made_hw_4-build, base: C:\Users\user\IdeaProjects\MADE_HW_4\project, plugins: List(<none>))) took 9.662ms
[debug] [Loading] Done in C:\Users\user\IdeaProjects\MADE_HW_4\project, returning: (made_hw_4-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4545.982499ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.040599ms
[debug]         Load.loadUnit(file:/C:/Users/user/IdeaProjects/MADE_HW_4/project/, ...) took 4600.565699ms
[debug]       Load.apply: load took 4602.736099ms
[debug]       Load.apply: resolveProjects took 0.3192ms
[debug]       Load.apply: finalTransforms took 20.3262ms
[debug]       Load.apply: config.delegates took 0.7702ms
[debug]       Load.apply: Def.make(settings)... took 242.3445ms
[debug]       Load.apply: structureIndex took 99.4775ms
[debug]       Load.apply: mkStreams took 0.004099ms
[info] loading project definition from C:\Users\user\IdeaProjects\MADE_HW_4\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7587.4683ms
[debug]     Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\user\IdeaProjects\MADE_HW_4
[debug]       Load.loadUnit: mkEval took 0.537799ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\IdeaProjects\MADE_HW_4, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.657299 ms
[info] loading settings for project made_hw_4 from build.sbt ...
[debug]         Load.resolveProject(made_hw_4) took 56.4323ms
[debug]       Load.loadTransitive: finalizeProject(Project(id made_hw_4, base: C:\Users\user\IdeaProjects\MADE_HW_4, plugins: List(<none>))) took 64.6471ms
[debug] [Loading] Done in C:\Users\user\IdeaProjects\MADE_HW_4, returning: (made_hw_4)
[debug]     Load.loadUnit: loadedProjectsRaw took 2963.7221ms
[debug]     Load.loadUnit: cleanEvalClasses took 37.443ms
[debug]   Load.loadUnit(file:/C:/Users/user/IdeaProjects/MADE_HW_4/, ...) took 10589.9852ms
[debug] Load.apply: load took 10592.3601ms
[debug] Load.apply: resolveProjects took 0.2573ms
[debug] Load.apply: finalTransforms took 38.678699ms
[debug] Load.apply: config.delegates took 0.6265ms
[debug] Load.apply: Def.make(settings)... took 235.6257ms
[debug] Load.apply: structureIndex took 58.190299ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to MADE_HW_4 (in build file:/C:/Users/user/IdeaProjects/MADE_HW_4/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58472 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58472, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to MADE_HW_4 (in build file:/C:/Users/user/IdeaProjects/MADE_HW_4/)
[debug] > Exec(idea-shell, None, None)
